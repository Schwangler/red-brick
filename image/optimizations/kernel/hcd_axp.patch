diff --git a/drivers/usb/sunxi_usb/hcd/hcd0/sw_hcd0.c b/drivers/usb/sunxi_usb/hcd/hcd0/sw_hcd0.c
index 846a01f..7ffc619 100644
--- a/drivers/usb/sunxi_usb/hcd/hcd0/sw_hcd0.c
+++ b/drivers/usb/sunxi_usb/hcd/hcd0/sw_hcd0.c
@@ -32,7 +32,10 @@
 #include <linux/clk.h>
 #include <linux/io.h>
 #include <linux/gpio.h>
+
+#ifdef SUNXI_USE_AXP_GPIO
 #include "../../../../power/axp_power/axp-gpio.h"
+#endif
 
 #include  <mach/clock.h>
 #include  "../include/sw_hcd_config.h"
@@ -427,12 +430,15 @@ static __s32 pin_init(sw_hcd_io_t *sw_hcd_io)
 	if (sw_hcd_io->drv_vbus_gpio_set.port == 0xffff) {    /* power */
 		if (sw_hcd_io->drv_vbus_gpio_set.mul_sel == 0 ||
 				sw_hcd_io->drv_vbus_gpio_set.mul_sel == 1) {
+#ifdef SUNXI_USE_AXP_GPIO
 			axp_gpio_set_io(sw_hcd_io->drv_vbus_gpio_set.port_num,
 					sw_hcd_io->drv_vbus_gpio_set.mul_sel);
 			axp_gpio_set_value(
 					sw_hcd_io->drv_vbus_gpio_set.port_num,
 					!sw_hcd_io->drv_vbus_gpio_set.data);
-
+#else
+			DMSG_INFO("AXP 152 GPIO is missing\n");
+#endif
 			return 100 + sw_hcd_io->drv_vbus_gpio_set.port_num;
 		} else {
 			DMSG_PANIC("ERR: unkown gpio mul_sel(%d)\n",
@@ -480,11 +486,15 @@ static __s32 pin_exit(sw_hcd_io_t *sw_hcd_io)
 {
 	if (sw_hcd_io->Drv_vbus_Handle) {
 		if (sw_hcd_io->drv_vbus_gpio_set.port == 0xffff) { /* power */
+#ifdef SUNXI_USE_AXP_GPIO 
 			axp_gpio_set_io(sw_hcd_io->drv_vbus_gpio_set.port_num,
 					sw_hcd_io->drv_vbus_gpio_set.mul_sel);
 			axp_gpio_set_value(
 					sw_hcd_io->drv_vbus_gpio_set.port_num,
 					sw_hcd_io->drv_vbus_gpio_set.data);
+#else
+			DMSG_INFO("AXP 152 GPIO is missing\n");
+#endif
 		} else {
 	gpio_release(sw_hcd_io->Drv_vbus_Handle, 0);
 		}
@@ -551,8 +561,12 @@ static void sw_hcd_board_set_vbus(struct sw_hcd *sw_hcd, int is_on)
 	if (is_on && hcd0_set_vbus_cnt == 1) {
 		DMSG_INFO("[%s]: Set USB Power On\n", sw_hcd->driver_name);
 		if (sw_hcd->sw_hcd_io->drv_vbus_gpio_set.port == 0xffff)
+ #ifdef SUNXI_USE_AXP_GPIO
 			axp_gpio_set_value(hcd_io->drv_vbus_gpio_set.port_num,
 					on_off);
+ #else
+			DMSG_INFO("AXP 152 GPIO is missing\n");
+ #endif
 		else
 			gpio_write_one_pin_value(hcd_io->Drv_vbus_Handle,
 					on_off, NULL);
@@ -562,8 +576,13 @@ static void sw_hcd_board_set_vbus(struct sw_hcd *sw_hcd, int is_on)
 	} else if (!is_on && hcd0_set_vbus_cnt == 0) {
 		DMSG_INFO("[%s]: Set USB Power Off\n", sw_hcd->driver_name);
 		if (sw_hcd->sw_hcd_io->drv_vbus_gpio_set.port == 0xffff)
+ #ifdef SUNXI_USE_AXP_GPIO
 			axp_gpio_set_value(hcd_io->drv_vbus_gpio_set.port_num,
 					on_off);
+ #else
+			DMSG_INFO("AXP 152 GPIO is missing\n");	
+ #endif
+
 		else
 			gpio_write_one_pin_value(hcd_io->Drv_vbus_Handle,
 					on_off, NULL);
